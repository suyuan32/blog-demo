// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `json:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `json:"pageSize" validate:"required,number,lt=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id uint64 `json:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []uint64 `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id"`
}

// Basic UUID request in path | 基础UUID地址参数请求
// swagger:model UUIDPathReq
type UUIDPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// required : true
	// max length : 36
	// min length : 36
	Id string `json:"id" validate:"required,len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base ID response data | 基础ID信息
// swagger:model BaseIDInfo
type BaseIDInfo struct {
	// ID
	Id *uint64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础UUID信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The response data of article information | Article信息
// swagger:model ArticleInfo
type ArticleInfo struct {
	BaseUUIDInfo
	// 文章标题
	Title *string `json:"title,optional"`
	// 文章内容
	Content *string `json:"content,optional"`
	// 关键字
	Keyword *string `json:"keyword,optional"`
	// 浏览量
	Visit *int `json:"visit,optional"`
	// 分类 ID
	CategoryId *uint64 `json:"categoryId,optional"`
	// 状态
	Status *uint8 `json:"status,optional"`
}

// The response data of article list | Article列表数据
// swagger:model ArticleListResp
type ArticleListResp struct {
	BaseDataInfo
	// Article list data | Article列表数据
	Data ArticleListInfo `json:"data"`
}

// Article list data | Article列表数据
// swagger:model ArticleListInfo
type ArticleListInfo struct {
	BaseListInfo
	// The API list data | Article列表数据
	Data []ArticleInfo `json:"data"`
}

// Get article list request params | Article列表请求参数
// swagger:model ArticleListReq
type ArticleListReq struct {
	PageInfo
	// 文章标题
	Title *string `json:"title,optional"`
	// 文章内容
	Content *string `json:"content,optional"`
	// 关键字
	Keyword *string `json:"keyword,optional"`
}

// Article information response | Article信息返回体
// swagger:model ArticleInfoResp
type ArticleInfoResp struct {
	BaseDataInfo
	// Article information | Article数据
	Data ArticleInfo `json:"data"`
}

// The response data of category information | Category信息
// swagger:model CategoryInfo
type CategoryInfo struct {
	BaseIDInfo
	// 栏目标题
	Title *string `json:"title,optional"`
	// 备注
	Remark *string `json:"remark,optional"`
}

// The response data of category list | Category列表数据
// swagger:model CategoryListResp
type CategoryListResp struct {
	BaseDataInfo
	// Category list data | Category列表数据
	Data CategoryListInfo `json:"data"`
}

// Category list data | Category列表数据
// swagger:model CategoryListInfo
type CategoryListInfo struct {
	BaseListInfo
	// The API list data | Category列表数据
	Data []CategoryInfo `json:"data"`
}

// Get category list request params | Category列表请求参数
// swagger:model CategoryListReq
type CategoryListReq struct {
	PageInfo
	// 栏目标题
	Title *string `json:"title,optional"`
	// 备注
	Remark *string `json:"remark,optional"`
}

// Category information response | Category信息返回体
// swagger:model CategoryInfoResp
type CategoryInfoResp struct {
	BaseDataInfo
	// Category information | Category数据
	Data CategoryInfo `json:"data"`
}
